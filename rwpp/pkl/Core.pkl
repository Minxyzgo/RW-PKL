@ModuleInfo { minPklVersion = "0.25.1" }
module rwpp.pkl.Core

import "generation.pkl"

abstract class Unit {
  name: String(!isBlank)
}

class Core extends Unit {
  altNames: String(!isBlank)?
  `class`: "CustomMetaData"?
  strictLevel: Int(isBetween(0, 1))?
  price: Int?
  mass: Int?
  techLevel: Int(isBetween(1, 3))?
  buildSpeed: Duration?
  radius: Int?

  isBio: Boolean?
  isBug: Boolean?
  isBuilder: Boolean?

  streamingCos: Int?

  maxHp: Int?
  maxShield: Int?

  displayText: String?
  displayDescription: String?
  displayRadius: Int?

  canRepairBuildings: Boolean(repairRequiredBuilder)?
  canRepairUnits: Boolean(repairRequiredBuilder)?

  nanoRange: Int?
  nanoRepairSpeed: Float?
  nanoBuildSpeed: Float?

  @generation.Generation {
    generationCons = (v) ->
        let (list = (v as Listing<CanBuild>).toList())
          list.mapIndexed((i, m) ->
            """
            canBuild_\(i)_name: \(m.unit.name)
            canBuild_\(i)_pos: \(m.pos)
            """
          ).join("\n")
  }
  canBuilds: Listing<CanBuild>?

  @generation.Generation {
    generationCons = (v) ->
        let (list = (v as Listing<Unit>).toList())
          "overrideAndReplace" + ": " + list.map((it) -> it.name).join(", ")
  }
  overrideAndReplace: Listing<Unit>?

  hidden repairRequiredBuilder = (v) -> if(v && isBuilder != true) throw("isBuilder must be true") else true
}

class CanBuild {
  unit: Unit
  pos: Int
}



